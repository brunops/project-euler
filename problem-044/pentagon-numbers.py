# Pentagon numbers
# Problem 44
# Pentagonal numbers are generated by the formula, Pn=n(3n-1)/2. The first ten pentagonal numbers are:

# 1, 5, 12, 22, 35, 51, 70, 92, 117, 145, ...

# It can be seen that P4 + P7 = 22 + 70 = 92 = P8. However, their difference, 70 - 22 = 48, is not pentagonal.

# Find the pair of pentagonal numbers, Pj and Pk, for which their sum and difference are pentagonal and D = |Pk - Pj| is minimised; what is the value of D?

pentagon_numbers = set([1, 5])
curr_n = 3
def pentagon_number(n):
  return (n * (3 * n - 1)) / 2

def generate_pentagon_numbers(until_n):
  global curr_n
  while curr_n < until_n:
    pentagon_numbers.add(pentagon_number(curr_n))
    curr_n += 1

def is_sum_and_difference_pentagonal(n1, n2):
  generate_pentagon_numbers(n1 + n2)
  if pentagon_number(n1) + pentagon_number(n2) in pentagon_numbers and pentagon_number(n1) - pentagon_number(n2) in pentagon_numbers:
    return True
  else:
    return False

def find_pentagonal_pair_with_smallest_difference():
  k = 1
  while True:
    for j in reversed(range(1, k)):
      if is_sum_and_difference_pentagonal(k, j):
        found = True
        return pentagon_number(k) - pentagon_number(j)
    k += 1

print find_pentagonal_pair_with_smallest_difference()




