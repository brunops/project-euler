# encoding: utf-8
# Triangular, pentagonal, and hexagonal
# Problem 45
# Triangle, pentagonal, and hexagonal numbers are generated by the following formulae:
#
# Triangle    Tn=n(n+1)/2   1, 3, 6, 10, 15, ...
# Pentagonal    Pn=n(3n−1)/2    1, 5, 12, 22, 35, ...
# Hexagonal   Hn=n(2n−1)    1, 6, 15, 28, 45, ...
# It can be verified that T285 = P165 = H143 = 40755.
#
# Find the next triangle number that is also pentagonal and hexagonal.

from math import sqrt

def triangle_number(n):
  return (n * (n + 1)) / 2

# formula taken from http://en.wikipedia.org/wiki/Pentagonal_number
def is_pentagonal(number):
  n = (sqrt(number * 24 + 1) + 1) / 6
  return is_natural(n)

# formula taken from http://en.wikipedia.org/wiki/Hexagonal_number
def is_hexagonal(number):
  n = (sqrt(number * 8 + 1) + 1) / 4
  return is_natural(n)

def is_natural(number):
  return number == int(number)

found = False
n = 286
while not found:
  number = triangle_number(n)
  if is_pentagonal(number) and is_hexagonal(number):
    print number
    found = True

  n += 1

